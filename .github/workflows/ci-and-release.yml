name: CI/Release Workflow

on:
  push:
    branches:
      - '*'

env:
  DOCKER_REGISTRY: "mck-developer-portal-sandbox-docker.jfrog.io" # TODO: Change to name of your Docker Registry (eg. mck-team-name.jfrog.io)
  IMAGE_NAME: "mck-developer-portal-sandbox-docker.jfrog.io/tanzu-workshop-example" # TODO: Change part to name of your Docker Registry (eg. mck-team-name.jfrog.io/image-name)
  PRISMA_USER:  ${{ secrets.PRISMA_USER }}
  PRISMA_PASSWORD:  ${{ secrets.PRISMA_PASSWORD }}

jobs:
  build_and_push:
    name: Build, Test, and Push Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build project
        run: |
          mkdocs build

      - name: Generate short SHA
        uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Setup Docker build
        uses: docker/setup-buildx-action@v1

      - name: Login to JFrog
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DEV_PORTAL_JFROG_USERNAME }} # TODO: Change to secrets.name of your jFrog Service Account User Name
          password: ${{ secrets.DEV_PORTAL_JFROG_API_KEY }} # TODO: Change to secrets.name of your jFrog Service Account Api Key
          registry: ${{ env.DOCKER_REGISTRY }}

      - name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.short-sha.outputs.sha }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          load: true

      - id: scan-docker-image
        name: Scan docker image
        run: |
          curl -u $PRISMA_USER:$PRISMA_PASSWORD --output twistcli https://us-east1.cloud.twistlock.com/us-2-158257908/api/v1/util/twistcli && chmod +x twistcli && mv twistcli /tmp/
          /tmp/twistcli images scan --details --address https://us-east1.cloud.twistlock.com/us-2-158257908 --user $PRISMA_USER --password $PRISMA_PASSWORD $IMAGE_NAME

      - if: github.ref == 'refs/heads/main'
        id: version-bump-git-tag
        name: Bump version and push git tag
        uses: anothrNick/github-tag-action@9885a4f9af674ba472de91fb3c0cb033ecb32b7e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: github.ref == 'refs/heads/main'
        name: Docker Push
        id: push-docker-image
        run: |
          docker tag $IMAGE_NAME:${{ steps.short-sha.outputs.sha }} $IMAGE_NAME:${{ steps.version-bump-git-tag.outputs.new_tag }}
          docker push -a $IMAGE_NAME

      - if: github.ref == 'refs/heads/main'
        name: Create Prerelease
        uses: ncipollo/release-action@v1
        with:
          prerelease: true
          tag: ${{ steps.version-bump-git-tag.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
